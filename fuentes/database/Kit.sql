/*
2025-07-09
Actual: 11.3.0-COL
*/

INSERT INTO public.authorities(user_id, authority)
SELECT id, 'ROLE_OP_CTRL_DIFF_FEE' FROM public.users where username in ('admin-qye')
;
INSERT INTO public.authorities(user_id, authority)
SELECT id, 'ROLE_OP_REP_MAESTRO_REL' FROM public.users where username in ('daniel.gomez1', 'brayan.giraldom', 'santiago.isaza')
;
INSERT INTO public.authorities(user_id, authority)
SELECT id, 'ROLE_OP_CTRL_DIFF_FEE' FROM public.users where username in ('daniel.gomez1', 'brayan.giraldom', 'santiago.isaza')
;


--========================================================================
--========================================================================
--========================================================================
-- Reporte diferencias fee

--Ingresos/Egresos netos
CREATE OR REPLACE VIEW public.vw_ingresos_egresos_diarios AS
SELECT
    client_id, custodian, account_no, ingreso_egreso, replace(COALESCE(trade_date, process_date), '-', '')::VARCHAR(100) as date_mov,
    sum(usde_net_amount)::NUMERIC(45,20) as usde_net_amount, sum(retiro)::NUMERIC(45,20) as retiro, sum(recaudo)::NUMERIC(45,20) as recaudo, count(*)::BIGINT as cant_reg
FROM public.vw_reporte_maestro_datos_movimientos
GROUP BY client_id, custodian, account_no, ingreso_egreso, replace(COALESCE(trade_date, process_date), '-', '')
;

DROP VIEW public.vw_reporte_diferencias_fee;
CREATE OR REPLACE VIEW public.vw_reporte_diferencias_fee AS
    SELECT
        ie_neto.client_id,tb_cte.nombre,ie_neto.custodian,ie_neto.account_no,
        ie_neto.ingreso_egreso_efectivo,
        seg_fee.id,seg_fee.glosa,seg_fee.monto_min,seg_fee.monto_max,
        seg_fee.annual_fee*100 as fee_seg,tb_cte.fee as fee_cte,COALESCE(((seg_fee.annual_fee*100)=tb_cte.fee), false) as flag_fee
    FROM
    (
        SELECT
            vw_ie.client_id, vw_ie.custodian, vw_ie.account_no,
            sum(vw_ie.usde_net_amount) AS ingreso_egreso_efectivo
        FROM public.vw_ingresos_egresos_diarios vw_ie
        where ingreso_egreso=true
        GROUP BY vw_ie.client_id, vw_ie.custodian, vw_ie.account_no
    ) as ie_neto
    INNER JOIN clientes.par_fee_segmento as seg_fee
    ON ie_neto.ingreso_egreso_efectivo BETWEEN seg_fee.monto_min AND seg_fee.monto_max
    INNER JOIN clientes.cliente tb_cte
    ON ie_neto.client_id = tb_cte.identificador
;



--========================================================================
--========================================================================
--========================================================================
--




--========================================================================
--========================================================================
--========================================================================
-- Optimización índices/queries

--crea indice en public.tbvw_maestro_cuentas_pershing
CREATE INDEX IF NOT EXISTS tbvw_maestro_cuentas_pershing_custodian_index ON public.tbvw_maestro_cuentas_pershing (custodian);
CREATE INDEX IF NOT EXISTS tbvw_maestro_cuentas_pershing_account_index ON public.tbvw_maestro_cuentas_pershing (account_no);
CREATE INDEX IF NOT EXISTS tbvw_maestro_cuentas_pershing_cuenta_index ON public.tbvw_maestro_cuentas_pershing (id_cuenta_custodio);
CREATE INDEX IF NOT EXISTS tbvw_maestro_cuentas_pershing_client_index ON public.tbvw_maestro_cuentas_pershing (client_id);
--crea indice en public.rectificacion_cuentas_no_informadas
CREATE INDEX IF NOT EXISTS rectificacion_cuentas_no_informadas_custodian_index ON public.rectificacion_cuentas_no_informadas (custodian);
CREATE INDEX IF NOT EXISTS rectificacion_cuentas_no_informadas_account_index ON public.rectificacion_cuentas_no_informadas (account_no);
CREATE INDEX IF NOT EXISTS rectificacion_cuentas_no_informadas_cuenta_index ON public.rectificacion_cuentas_no_informadas (id_cuenta_custodio);
CREATE INDEX IF NOT EXISTS rectificacion_cuentas_no_informadas_client_index ON public.rectificacion_cuentas_no_informadas (client_id);
CREATE INDEX IF NOT EXISTS rectificacion_cuentas_no_informadas_process_date_index ON public.rectificacion_cuentas_no_informadas (process_date);


alter table public.tbvw_maestro_cuentas_pershing
    add row_no bigint generated by default as identity;

SELECT row_no, COUNT(*)
  FROM public.tbvw_maestro_cuentas_pershing
 GROUP BY row_no
HAVING COUNT(*) > 1;

ALTER TABLE public.tbvw_maestro_cuentas_pershing
  ADD CONSTRAINT pk_tbvw_maestro_cuentas_pershing_row_no
  PRIMARY KEY (row_no);


create or replace view public.vw_reporte_maestro_datos_clientes
as
SELECT vw_union.row_id+ CASE vw_union.src_vw
              WHEN 'A' THEN 0
              WHEN 'B' THEN 1000000000
              WHEN 'C' THEN 2000000000
            END::BIGINT AS row_id,
       id_reg,
       id_interno_cliente,
       custodian,
       client_id,
       tipo_identificador_cliente,
       glosa_identificador_cliente,
       firm_no,
       sub_no,
       rep_no,
       office_id,
       account_no,
       name,
       fee,
       full_name,
       address,
       short_name,
       date_of_birth,
       acct_status_value,
       email,
       country_code_value,
       country,
       w8_date,
       w9_date,
       w8_status_value,
       w9_status_value,
       discr_trading_code_value,
       account_type,
       cash_margin_account,
       debit_card_indicator,
       open_date,
       close_date,
       participant_type,
       last_statement_date,
       tax_id,
       process_date,
       is_last_info,
       is_last_schema_by_account_no
FROM (SELECT 'B'::text                                                                                                  AS src_vw,
             vw_acct.row_no                    AS row_id,
             vw_acct.id                                                                                                 AS id_reg,
             vw_acct.id_interno_cliente,
             upper(vw_acct.custodian::text)::character varying(100)                                                     AS custodian,
             upper(vw_acct.client_id::text)::character varying(100)                                                     AS client_id,
             vw_acct.tipo_identificador_cliente,
             vw_acct.glosa_identificador_cliente,
             vw_acct.ibd_number                                                                                         AS firm_no,
             vw_acct.id_office::character varying(100)                                                                  AS sub_no,
             upper(vw_acct.ip_number::text)::character varying(100)                                                     AS rep_no,
             upper(vw_acct.id_office)::character varying(100)                                                           AS office_id,
             upper(vw_acct.account_no::text)::character varying(100)                                                    AS account_no,
             COALESCE(upper(vw_acct.name::text),
                      upper(vw_acct.full_name::text))::character varying(100)                                           AS name,
             upper(vw_acct.full_name::text)::character varying(100)                                                     AS full_name,
             upper(vw_acct.full_address::text)::character varying(100)                                                  AS address,
             upper(vw_acct.account_short_name::text)::character varying(100)                                            AS short_name,
             vw_acct.birth_date                                                                                         AS date_of_birth,
             CASE
                 WHEN vw_acct.date_account_closed IS NULL THEN 'OPEN'::text
                 ELSE 'CLOSED'::text
                 END::character varying(100)                                                                            AS acct_status_value,
             lower(vw_acct.email_address::text)::character varying(100)                                                 AS email,
             upper(vw_acct.country_of_residence_code::text)::character varying(100)                                     AS country_code_value,
             upper(vw_acct.country_of_residence_value::text)::character varying(100)                                    AS country,
             fn_fecha_date_to_string(vw_acct.w_8_date_signed, 'YYYYMMDD'::character varying,
                                     '-'::character varying)                                                            AS w8_date,
             vw_acct.w_9_date_signed                                                                                    AS w9_date,
             upper(
                     CASE
                         WHEN vw_acct.w_8_w_9_indicator::text = 'W8'::text
                             THEN pershing.fn_obtiene_valor_param_generic_pershing('w8_status'::character varying,
                                                                                   (vw_acct.w_8_date_signed IS NOT NULL)::character varying(100))
                         ELSE NULL::character varying
                         END::text)::character varying(100)                                                             AS w8_status_value,
             upper(
                     CASE
                         WHEN vw_acct.w_8_w_9_indicator::text = 'W9'::text
                             THEN pershing.fn_obtiene_valor_param_generic_pershing('w9_status'::character varying,
                                                                                   (vw_acct.w_9_date_signed IS NOT NULL)::character varying(100))
                         ELSE NULL::character varying
                         END::text)::character varying(100)                                                             AS w9_status_value,
             upper(vw_acct.invest_advisor_discretion_granted_value::text)::character varying(100)                       AS discr_trading_code_value,
             upper(((vw_acct.registration_type_value::text || ' ('::text) || vw_acct.registration_type::text) ||
                   ')'::text)::character varying(100)                                                                   AS account_type,
             upper(vw_acct.cash_margin_account::text)::character varying(100)                                           AS cash_margin_account,
             upper(vw_acct.ama_indicator_value)::character varying(100)                                                 AS debit_card_indicator,
             fn_fecha_date_to_string(vw_acct.date_account_opened, 'YYYYMMDD'::character varying,
                                     '-'::character varying)::character varying(100)                                    AS open_date,
             vw_acct.date_account_closed                                                                                AS close_date,
             fn_obtiene_valor_parametro('pershing.participant_type'::character varying,
                                        'participant_type'::character varying)::character varying(1000)                 AS participant_type,
             NULL::date                                                                                                 AS last_statement_date,
             upper(pershing.fn_obtiene_valor_param_generic_pershing('tax_id_type'::character varying,
                                                                    vw_acct.tax_id_type)::text)::character varying(100) AS tax_id,
             upper(vw_acct.process_date::text)::character varying(100)                                                  AS process_date,
             true                                                                                                       AS is_last_info,
             true                                                                                                       AS is_last_schema_by_account_no,
             vw_acct.fee
      FROM tbvw_maestro_cuentas_pershing vw_acct) vw_union
;





--========================================================================
--========================================================================
--========================================================================
--





--========================================================================
--========================================================================
--========================================================================
--






--========================================================================
--========================================================================
--========================================================================
--





--========================================================================
--========================================================================
--========================================================================
--


--========================================================================
--========================================================================
--========================================================================
--



--========================================================================
--========================================================================
--========================================================================
--


--========================================================================
--========================================================================
--========================================================================
--




--========================================================================
--========================================================================
--========================================================================
--


--========================================================================
--========================================================================
--========================================================================
--



--========================================================================
--========================================================================
--========================================================================
--



