create or replace function stage_pershing.fn_extrae_gact_reg_a(_id_proceso bigint)
    returns TABLE(id bigint, id_proceso bigint, process_date character varying, transaction_code character varying, record_indicator_value character varying, record_id_sequence_number character varying, account_number character varying, cusip_number character varying, campo_6 character varying, underlying_cusip character varying, campo_8 character varying, security_symbol character varying, investment_professional_of_record character varying, executing_investment_professional character varying, transaction_type character varying, buy_sell_code character varying, open_close_indicator character varying, par_key_code character varying, source_code character varying, maxx_key_code character varying, process_date_sfl character varying, trade_date character varying, settlement_entry_date character varying, campo_21 character varying, source_of_input character varying, reference_number character varying, batch_code character varying, same_day_settlement character varying, contra_account character varying, market_code character varying, blotter_code character varying, cancel_code character varying, correction_code character varying, merket_limit_indicator character varying, legend_code_1 character varying, legend_code_2 character varying, campo_34 character varying, quantity character varying, quantity_sign character varying, price_in_trade_currency character varying, campo_38 character varying, price_in_trade_currency_sign character varying, currency_indicator_for_price character varying, net_amount_in_usd character varying, net_amount_in_usd_sign character varying, principal_in_usd character varying, principal_in_usd_sign character varying, interest_in_usd character varying, interest_in_usd_sign character varying, commision_in_usd character varying, commision_in_usd_sign character varying, tax_in_usd character varying, tax_in_usd_sign character varying, transaction_fee_in_usd character varying, transaction_fee_in_usd_sign character varying, misc_fee_in_usd character varying, misc_fee_in_usd_sign character varying, other_fee_in_usd character varying, other_fee_in_usd_sign character varying, tefra_wh_amount_in_usd character varying, tefra_wh_amount_in_usd_sign character varying, pershing_charge_in_usd character varying, pershing_charge_in_usd_sign character varying, brokerage_charge_in_usd character varying, brokerage_charge_in_usd_sign character varying, sales_credit_in_usd character varying, sales_credit_in_usd_sign character varying, settlement_fee_in_usd character varying, settlement_fee_in_usd_sign character varying, service_charge_in_usd character varying, service_charge_in_usd_sign character varying, markup_markdown_amount_in_usd character varying, markup_markdown_amount_in_usd_sign character varying, campo_71 character varying, dividend_payable_date character varying, campo_73 character varying, dividend_record_date character varying, dividend_type character varying, campo_76 character varying, shares_of_record_quantity_for_dividends character varying, order_size_quantity character varying, campo_79 character varying, pool_factor character varying, parsed_customer_account_number character varying, ibd_number character varying, security_type_code character varying, security_modifier_code character varying, security_calculation_code character varying, minor_product_code character varying, foreign_product_indicator character varying, with_due_bill_indicator character varying, taxable_municipal_bond_indicator character varying, omnibus_indicator character varying, external_order_id character varying, campo_92 character varying, market_value_of_transaction character varying, ip_number_parsed character varying, reported_price character varying, reported_price_sign character varying, previous_day_market_value_of_transaction character varying, price_in_usd character varying, option_root_id character varying, expiration_date character varying, put_call_code character varying, strike_price character varying, repo_identifier character varying, taxable character varying, qualified character varying, expanded_ip_number character varying, expanded_exec_ip_number character varying, expanded_legacy_ip_number character varying, campo_109 character varying, campo_110 character varying, campo_111 character varying, eor character varying)
    language plpgsql
as
$$
    BEGIN

    RETURN QUERY
    SELECT sfl_file.id, sfl_file.id_proceso, sfl_file.process_date,
        substr(sfl_file.linea, 1, 2)::VARCHAR(100) as transaction_code,
        substr(sfl_file.linea, 3, 1)::VARCHAR(100) as record_indicator_value,
        substr(sfl_file.linea, 4, 8)::VARCHAR(100) as record_id_sequence_number,
        substr(sfl_file.linea, 12, 10)::VARCHAR(100) as account_number,
        substr(sfl_file.linea, 22, 9)::VARCHAR(100) as cusip_number,
        substr(sfl_file.linea, 31, 4)::VARCHAR(100) as campo_6,
        substr(sfl_file.linea, 35, 9)::VARCHAR(100) as underlying_cusip,
        substr(sfl_file.linea, 44, 4)::VARCHAR(100) as campo_8,
        substr(sfl_file.linea, 48, 16)::VARCHAR(100) as security_symbol,
        substr(sfl_file.linea, 64, 3)::VARCHAR(100) as investment_professional_of_record,
        substr(sfl_file.linea, 67, 3)::VARCHAR(100) as executing_investment_professional,
        substr(sfl_file.linea, 70, 1)::VARCHAR(100) as transaction_type,
        substr(sfl_file.linea, 71, 1)::VARCHAR(100) as buy_sell_code,
        substr(sfl_file.linea, 72, 1)::VARCHAR(100) as open_close_indicator,
        substr(sfl_file.linea, 73, 2)::VARCHAR(100) as par_key_code,
        substr(sfl_file.linea, 75, 3)::VARCHAR(100) as source_code,
        substr(sfl_file.linea, 78, 4)::VARCHAR(100) as maxx_key_code,
        substr(sfl_file.linea, 82, 8)::VARCHAR(100) as process_date_sfl,
        substr(sfl_file.linea, 90, 8)::VARCHAR(100) as trade_date,
        substr(sfl_file.linea, 98, 8)::VARCHAR(100) as settlement_entry_date,
        substr(sfl_file.linea, 106, 7)::VARCHAR(100) as campo_21,
        substr(sfl_file.linea, 113, 2)::VARCHAR(100) as source_of_input,
        substr(sfl_file.linea, 115, 6)::VARCHAR(100) as reference_number,
        substr(sfl_file.linea, 121, 5)::VARCHAR(100) as batch_code,
        substr(sfl_file.linea, 126, 1)::VARCHAR(100) as same_day_settlement,
        substr(sfl_file.linea, 127, 10)::VARCHAR(100) as contra_account,
        substr(sfl_file.linea, 137, 1)::VARCHAR(100) as market_code,
        substr(sfl_file.linea, 138, 1)::VARCHAR(100) as blotter_code,
        substr(sfl_file.linea, 139, 1)::VARCHAR(100) as cancel_code,
        substr(sfl_file.linea, 140, 1)::VARCHAR(100) as correction_code,
        substr(sfl_file.linea, 141, 1)::VARCHAR(100) as merket_limit_indicator,
        substr(sfl_file.linea, 142, 1)::VARCHAR(100) as legend_code_1,
        substr(sfl_file.linea, 143, 1)::VARCHAR(100) as legend_code_2,
        substr(sfl_file.linea, 144, 2)::VARCHAR(100) as campo_34,
        substr(sfl_file.linea, 146, 18)::VARCHAR(100) as quantity,
        substr(sfl_file.linea, 164, 1)::VARCHAR(100) as quantity_sign,
        substr(sfl_file.linea, 165, 18)::VARCHAR(100) as price_in_trade_currency,
        substr(sfl_file.linea, 183, 5)::VARCHAR(100) as campo_38,
        substr(sfl_file.linea, 188, 1)::VARCHAR(100) as price_in_trade_currency_sign,
        substr(sfl_file.linea, 189, 3)::VARCHAR(100) as currency_indicator_for_price,
        substr(sfl_file.linea, 192, 18)::VARCHAR(100) as net_amount_in_usd,
        substr(sfl_file.linea, 210, 1)::VARCHAR(100) as net_amount_in_usd_sign,
        substr(sfl_file.linea, 211, 18)::VARCHAR(100) as principal_in_usd,
        substr(sfl_file.linea, 229, 1)::VARCHAR(100) as principal_in_usd_sign,
        substr(sfl_file.linea, 230, 18)::VARCHAR(100) as interest_in_usd,
        substr(sfl_file.linea, 248, 1)::VARCHAR(100) as interest_in_usd_sign,
        substr(sfl_file.linea, 249, 18)::VARCHAR(100) as commision_in_usd,
        substr(sfl_file.linea, 267, 1)::VARCHAR(100) as commision_in_usd_sign,
        substr(sfl_file.linea, 268, 18)::VARCHAR(100) as tax_in_usd,
        substr(sfl_file.linea, 286, 1)::VARCHAR(100) as tax_in_usd_sign,
        substr(sfl_file.linea, 287, 18)::VARCHAR(100) as transaction_fee_in_usd,
        substr(sfl_file.linea, 305, 1)::VARCHAR(100) as transaction_fee_in_usd_sign,
        substr(sfl_file.linea, 306, 18)::VARCHAR(100) as misc_fee_in_usd,
        substr(sfl_file.linea, 324, 1)::VARCHAR(100) as misc_fee_in_usd_sign,
        substr(sfl_file.linea, 325, 18)::VARCHAR(100) as other_fee_in_usd,
        substr(sfl_file.linea, 343, 1)::VARCHAR(100) as other_fee_in_usd_sign,
        substr(sfl_file.linea, 344, 18)::VARCHAR(100) as tefra_wh_amount_in_usd,
        substr(sfl_file.linea, 362, 1)::VARCHAR(100) as tefra_wh_amount_in_usd_sign,
        substr(sfl_file.linea, 363, 18)::VARCHAR(100) as pershing_charge_in_usd,
        substr(sfl_file.linea, 381, 1)::VARCHAR(100) as pershing_charge_in_usd_sign,
        substr(sfl_file.linea, 382, 18)::VARCHAR(100) as brokerage_charge_in_usd,
        substr(sfl_file.linea, 400, 1)::VARCHAR(100) as brokerage_charge_in_usd_sign,
        substr(sfl_file.linea, 401, 18)::VARCHAR(100) as sales_credit_in_usd,
        substr(sfl_file.linea, 419, 1)::VARCHAR(100) as sales_credit_in_usd_sign,
        substr(sfl_file.linea, 420, 18)::VARCHAR(100) as settlement_fee_in_usd,
        substr(sfl_file.linea, 438, 1)::VARCHAR(100) as settlement_fee_in_usd_sign,
        substr(sfl_file.linea, 439, 18)::VARCHAR(100) as service_charge_in_usd,
        substr(sfl_file.linea, 457, 1)::VARCHAR(100) as service_charge_in_usd_sign,
        substr(sfl_file.linea, 458, 18)::VARCHAR(100) as markup_markdown_amount_in_usd,
        substr(sfl_file.linea, 476, 1)::VARCHAR(100) as markup_markdown_amount_in_usd_sign,
        substr(sfl_file.linea, 477, 1)::VARCHAR(100) as campo_71,
        substr(sfl_file.linea, 478, 8)::VARCHAR(100) as dividend_payable_date,
        substr(sfl_file.linea, 486, 1)::VARCHAR(100) as campo_73,
        substr(sfl_file.linea, 487, 8)::VARCHAR(100) as dividend_record_date,
        substr(sfl_file.linea, 495, 1)::VARCHAR(100) as dividend_type,
        substr(sfl_file.linea, 496, 1)::VARCHAR(100) as campo_76,
        substr(sfl_file.linea, 497, 18)::VARCHAR(100) as shares_of_record_quantity_for_dividends,
        substr(sfl_file.linea, 515, 18)::VARCHAR(100) as order_size_quantity,
        substr(sfl_file.linea, 533, 1)::VARCHAR(100) as campo_79,
        substr(sfl_file.linea, 534, 18)::VARCHAR(100) as pool_factor,
        substr(sfl_file.linea, 552, 10)::VARCHAR(100) as parsed_customer_account_number,
        substr(sfl_file.linea, 562, 3)::VARCHAR(100) as ibd_number,
        substr(sfl_file.linea, 565, 1)::VARCHAR(100) as security_type_code,
        substr(sfl_file.linea, 566, 1)::VARCHAR(100) as security_modifier_code,
        substr(sfl_file.linea, 567, 1)::VARCHAR(100) as security_calculation_code,
        substr(sfl_file.linea, 568, 3)::VARCHAR(100) as minor_product_code,
        substr(sfl_file.linea, 571, 1)::VARCHAR(100) as foreign_product_indicator,
        substr(sfl_file.linea, 572, 1)::VARCHAR(100) as with_due_bill_indicator,
        substr(sfl_file.linea, 573, 1)::VARCHAR(100) as taxable_municipal_bond_indicator,
        substr(sfl_file.linea, 574, 1)::VARCHAR(100) as omnibus_indicator,
        substr(sfl_file.linea, 575, 20)::VARCHAR(100) as external_order_id,
        substr(sfl_file.linea, 595, 3)::VARCHAR(100) as campo_92,
        substr(sfl_file.linea, 598, 18)::VARCHAR(100) as market_value_of_transaction,
        substr(sfl_file.linea, 616, 3)::VARCHAR(100) as ip_number_parsed,
        substr(sfl_file.linea, 619, 18)::VARCHAR(100) as reported_price,
        substr(sfl_file.linea, 637, 1)::VARCHAR(100) as reported_price_sign,
        substr(sfl_file.linea, 638, 18)::VARCHAR(100) as previous_day_market_value_of_transaction,
        substr(sfl_file.linea, 656, 18)::VARCHAR(100) as price_in_usd,
        substr(sfl_file.linea, 674, 6)::VARCHAR(100) as option_root_id,
        substr(sfl_file.linea, 680, 6)::VARCHAR(100) as expiration_date,
        substr(sfl_file.linea, 686, 1)::VARCHAR(100) as put_call_code,
        substr(sfl_file.linea, 687, 8)::VARCHAR(100) as strike_price,
        substr(sfl_file.linea, 695, 1)::VARCHAR(100) as repo_identifier,
        substr(sfl_file.linea, 696, 1)::VARCHAR(100) as taxable,
        substr(sfl_file.linea, 697, 1)::VARCHAR(100) as qualified,
        substr(sfl_file.linea, 698, 4)::VARCHAR(100) as expanded_ip_number,
        substr(sfl_file.linea, 702, 4)::VARCHAR(100) as expanded_exec_ip_number,
        substr(sfl_file.linea, 706, 4)::VARCHAR(100) as expanded_legacy_ip_number,
        substr(sfl_file.linea, 710, 20)::VARCHAR(100) as campo_109,
        substr(sfl_file.linea, 730, 12)::VARCHAR(100) as campo_110,
        substr(sfl_file.linea, 742, 8)::VARCHAR(100) as campo_111,
        substr(sfl_file.linea, 750, 1)::VARCHAR(100) as eor

    FROM stage_pershing.stage_gact_file sfl_file WHERE sfl_file.id_proceso = COALESCE(_id_proceso, sfl_file.id_proceso)
    --AND substr(sfl_file.linea, 1, 18)		= 'BOF      PERSHING '
    --AND substr(sfl_file.linea, 1, 18)		= 'EOF      PERSHING '
    AND substr(sfl_file.linea, 1, 3)		= 'GAA'
    ORDER BY sfl_file.id;

    RETURN;
    END;
$$;

alter function stage_pershing.fn_extrae_gact_reg_a(bigint) owner to postgres;

