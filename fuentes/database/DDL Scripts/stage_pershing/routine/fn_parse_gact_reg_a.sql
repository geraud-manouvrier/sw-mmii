create or replace function stage_pershing.fn_parse_gact_reg_a(_id_proceso bigint) returns SETOF stage_pershing.stage_gact_reg_a
    language plpgsql
as
$$
    BEGIN

    RETURN QUERY
    SELECT
        id, id_proceso, process_date::VARCHAR(100),
        transaction_code::VARCHAR(100),
        record_indicator_value::VARCHAR(100),
        record_id_sequence_number::int,
        account_number::VARCHAR(100),
        cusip_number::VARCHAR(100),
        campo_6::VARCHAR(100),
        underlying_cusip::VARCHAR(100),
        campo_8::VARCHAR(100),
        security_symbol::VARCHAR(100),
        investment_professional_of_record::VARCHAR(100),
        executing_investment_professional::VARCHAR(100),
        transaction_type::VARCHAR(100),
        buy_sell_code::VARCHAR(100),
        open_close_indicator::VARCHAR(100),
        par_key_code::VARCHAR(100),
        source_code::VARCHAR(100),
        maxx_key_code::int,
        public.fn_fecha_string_to_date(process_date_sfl, 'CCYYMMDD') as process_date_sfl,
        public.fn_fecha_string_to_date(trade_date, 'CCYYMMDD') as trade_date,
        public.fn_fecha_string_to_date(settlement_entry_date, 'CCYYMMDD') as settlement_entry_date,
        campo_21::VARCHAR(100),
        source_of_input::VARCHAR(100),
        reference_number::VARCHAR(100),
        batch_code::VARCHAR(100),
        same_day_settlement::VARCHAR(100),
        contra_account::VARCHAR(100),
        market_code::VARCHAR(100),
        blotter_code::VARCHAR(100),
        cancel_code::VARCHAR(100),
        correction_code::VARCHAR(100),
        merket_limit_indicator::VARCHAR(100),
        legend_code_1::VARCHAR(100),
        legend_code_2::VARCHAR(100),
        campo_34::VARCHAR(100),
        public.fn_convierte_texto_numerico_cobol(quantity, 5)::NUMERIC(45,20) as quantity,
        quantity_sign::VARCHAR(100),
        public.fn_convierte_texto_numerico_cobol(price_in_trade_currency, 9)::NUMERIC(45,20) as price_in_trade_currency,
        campo_38::VARCHAR(100),
        price_in_trade_currency_sign::VARCHAR(100),
        currency_indicator_for_price::VARCHAR(100),
        public.fn_convierte_texto_numerico_cobol(net_amount_in_usd, 3)::NUMERIC(45,20) as net_amount_in_usd,
        net_amount_in_usd_sign::VARCHAR(100),
        public.fn_convierte_texto_numerico_cobol(principal_in_usd, 3)::NUMERIC(45,20) as principal_in_usd,
        principal_in_usd_sign::VARCHAR(100),
        public.fn_convierte_texto_numerico_cobol(interest_in_usd, 2)::NUMERIC(45,20) as interest_in_usd,
        interest_in_usd_sign::VARCHAR(100),
        public.fn_convierte_texto_numerico_cobol(commision_in_usd, 2)::NUMERIC(45,20) as commision_in_usd,
        commision_in_usd_sign::VARCHAR(100),
        public.fn_convierte_texto_numerico_cobol(tax_in_usd, 2)::NUMERIC(45,20) as tax_in_usd,
        tax_in_usd_sign::VARCHAR(100),
        public.fn_convierte_texto_numerico_cobol(transaction_fee_in_usd, 2)::NUMERIC(45,20) as transaction_fee_in_usd,
        transaction_fee_in_usd_sign::VARCHAR(100),
        public.fn_convierte_texto_numerico_cobol(misc_fee_in_usd, 2)::NUMERIC(45,20) as misc_fee_in_usd,
        misc_fee_in_usd_sign::VARCHAR(100),
        public.fn_convierte_texto_numerico_cobol(other_fee_in_usd, 2)::NUMERIC(45,20) as other_fee_in_usd,
        other_fee_in_usd_sign::VARCHAR(100),
        public.fn_convierte_texto_numerico_cobol(tefra_wh_amount_in_usd, 2)::NUMERIC(45,20) as tefra_wh_amount_in_usd,
        tefra_wh_amount_in_usd_sign::VARCHAR(100),
        public.fn_convierte_texto_numerico_cobol(pershing_charge_in_usd, 2)::NUMERIC(45,20) as pershing_charge_in_usd,
        pershing_charge_in_usd_sign::VARCHAR(100),
        public.fn_convierte_texto_numerico_cobol(brokerage_charge_in_usd, 2)::NUMERIC(45,20) as brokerage_charge_in_usd,
        brokerage_charge_in_usd_sign::VARCHAR(100),
        public.fn_convierte_texto_numerico_cobol(sales_credit_in_usd, 2)::NUMERIC(45,20) as sales_credit_in_usd,
        sales_credit_in_usd_sign::VARCHAR(100),
        public.fn_convierte_texto_numerico_cobol(settlement_fee_in_usd, 2)::NUMERIC(45,20) as settlement_fee_in_usd,
        settlement_fee_in_usd_sign::VARCHAR(100),
        public.fn_convierte_texto_numerico_cobol(service_charge_in_usd, 2)::NUMERIC(45,20) as service_charge_in_usd,
        service_charge_in_usd_sign::VARCHAR(100),
        public.fn_convierte_texto_numerico_cobol(markup_markdown_amount_in_usd, 2)::NUMERIC(45,20) as markup_markdown_amount_in_usd,
        markup_markdown_amount_in_usd_sign::VARCHAR(100),
        campo_71::VARCHAR(100),
        public.fn_fecha_string_to_date(dividend_payable_date, 'CCYYMMDD') as dividend_payable_date,
        campo_73::VARCHAR(100),
        public.fn_fecha_string_to_date(dividend_record_date, 'CCYYMMDD') as dividend_record_date,
        dividend_type::int,
        campo_76::VARCHAR(100),
        public.fn_convierte_texto_numerico_cobol(shares_of_record_quantity_for_dividends, 5)::NUMERIC(45,20) as shares_of_record_quantity_for_dividends,
        public.fn_convierte_texto_numerico_cobol(order_size_quantity, 5)::NUMERIC(45,20) as order_size_quantity,
        campo_79::VARCHAR(100),
        public.fn_convierte_texto_numerico_cobol(pool_factor, 9)::NUMERIC(45,20) as pool_factor,
        parsed_customer_account_number::VARCHAR(100),
        ibd_number::VARCHAR(100),
        security_type_code::VARCHAR(100),
        security_modifier_code::VARCHAR(100),
        security_calculation_code::VARCHAR(100),
        minor_product_code::VARCHAR(100),
        foreign_product_indicator::VARCHAR(100),
        with_due_bill_indicator::VARCHAR(100),
        taxable_municipal_bond_indicator::VARCHAR(100),
        omnibus_indicator::VARCHAR(100),
        external_order_id::VARCHAR(100),
        campo_92::VARCHAR(100),
        public.fn_convierte_texto_numerico_cobol(market_value_of_transaction, 2)::NUMERIC(45,20) as market_value_of_transaction,
        ip_number_parsed::VARCHAR(100),
        public.fn_convierte_texto_numerico_cobol(reported_price, 9)::NUMERIC(45,20) as reported_price,
        reported_price_sign::VARCHAR(100),
        public.fn_convierte_texto_numerico_cobol(previous_day_market_value_of_transaction, 2)::NUMERIC(45,20) as previous_day_market_value_of_transaction,
        public.fn_convierte_texto_numerico_cobol(price_in_usd, 9)::NUMERIC(45,20) as price_in_usd,
        option_root_id::VARCHAR(100),
        public.fn_fecha_string_to_date(expiration_date, 'YYMMDD') as expiration_date,
        put_call_code::VARCHAR(100),
        public.fn_convierte_texto_numerico_cobol(strike_price, 3)::NUMERIC(45,20) as strike_price,
        repo_identifier::VARCHAR(100),
        taxable::VARCHAR(100),
        qualified::VARCHAR(100),
        expanded_ip_number::VARCHAR(100),
        expanded_exec_ip_number::VARCHAR(100),
        expanded_legacy_ip_number::VARCHAR(100),
        campo_109::VARCHAR(100),
        campo_110::VARCHAR(100),
        campo_111::VARCHAR(100),
        eor::VARCHAR(100)

    FROM stage_pershing.fn_extrae_gact_reg_a(_id_proceso)
    ORDER BY id;

    RETURN;
    END;
$$;

alter function stage_pershing.fn_parse_gact_reg_a(bigint) owner to postgres;

